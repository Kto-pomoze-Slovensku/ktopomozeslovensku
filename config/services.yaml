# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
  'env(FIO_API_TOKEN)': ''
  'env(FIO_API_URL)': ''
  'env(CRON_TOKEN)': ''
  'env(CSS_MANIFEST_FILE)': 'public/manifest.json'

services:
  # default configuration for services in *this* file
  _defaults:
    autowire: true      # Automatically injects dependencies in your services.
    autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

  # makes classes in src/ available to be used as services
  # this creates a service per class whose id is the fully-qualified class name
  App\:
    resource: '../src/*'
    exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

  # controllers are imported separately to make sure services can be injected
  # as action arguments even if you don't extend any base controller class
  App\Controller\:
    resource: '../src/Controller'
    tags: ['controller.service_arguments']

  # add more service definitions when explicit configuration is needed
  # please note that last definitions always *replace* previous ones

  App\Controller\RecipientsController:
    arguments:
      $donations: '@DonationsRepository'
    tags: ['controller.service_arguments']

  App\Controller\WeHelpedController:
    arguments:
      $donations: '@DonationsRepository'
    tags: ['controller.service_arguments']

  App\Controller\AboutController:
    arguments:
      $partners: '@PartnersRepository'
    tags: ['controller.service_arguments']

  App\Controller\UpdateAccountBalanceController:
    arguments:
      $cronToken: '%env(CRON_TOKEN)%'
    tags: ['controller.service_arguments']

  DonationsRepository:
    class: 'Doctrine\ORM\EntityRepository'
    factory: ['@doctrine.orm.default_entity_manager', 'getRepository']
    arguments: ['App\Entity\Donation']

  PartnersRepository:
    class: 'Doctrine\ORM\EntityRepository'
    factory: ['@doctrine.orm.default_entity_manager', 'getRepository']
    arguments: ['App\Entity\Partner']

  FormEmailRepository:
    class: 'Doctrine\ORM\EntityRepository'
    factory: ['@doctrine.orm.default_entity_manager', 'getRepository']
    arguments: ['App\Entity\FormEmail']

  App\Service\Account\AccountApiService:
    arguments:
      $fioApiToken: '%env(FIO_API_TOKEN)%'
      $fioApiUrl: '%env(FIO_API_URL)%'

  App\Service\CssManifestReader:
    arguments:
      - '%kernel.project_dir%/%env(CSS_MANIFEST_FILE)%'


  App\Service\Account\Serializer\TransactionType:
    tags:
      - { name: jms_serializer.subscribing_handler }

  App\Service\Account\AccountService:
    arguments:
      $accountTransactionRepository: '@AccountTransactionRepository'
      $accountBalanceRepository: '@AccountBalanceRepository'
      $accountActualBalanceRepository: '@AccountActualBalanceRepository'

  AccountActualBalanceRepository:
    class: App\Repository\AccountActualBalanceRepository
    factory: ['@doctrine.orm.default_entity_manager', 'getRepository']
    arguments: ['App\Entity\AccountActualBalance']

  AccountBalanceRepository:
    class: App\Repository\AccountBalanceRepository
    factory: ['@doctrine.orm.default_entity_manager', 'getRepository']
    arguments: ['App\Entity\AccountBalance']

  AccountTransactionRepository:
    class: App\Repository\AccountTransactionRepository
    factory: ['@doctrine.orm.default_entity_manager', 'getRepository']
    arguments: ['App\Entity\AccountTransaction']


  App\Service\TransparentAccountReporterService:
    arguments: ['@AccountActualBalanceRepository']

  App\Service\Mailer:
    arguments: ['@FormEmailRepository']

  App\EventListener\NotFoundRedirectListener:
    arguments: ['@router.default']
    tags:
      - { name: kernel.event_listener, event: kernel.exception, method: onKernelException }
